#!/usr/bin/python

import opsgenie_sdk
import socket
import hashlib
import os
import time
import sys
import argparse

#
# CONFIGURATION
# See README for details
#

API_KEY = "YOUR_API_KEY"

#
# END CONFIGURATION
#

# True if you don't want to use files for realerting
DONT_USE_FILES = False

parser = argparse.ArgumentParser( description='Resolves an opsgenie-alert' )
parser.add_argument( 'args', metavar='N', nargs='+', help='issue' )
args = parser.parse_args()

if API_KEY is "YOUR_API_KEY":
    print("Must specify API_KEY!")
    exit( 1 )

config = opsgenie_sdk.Configuration()
config.api_key['Authorization'] = API_KEY
client = opsgenie_sdk.ApiClient(config)

EVENT=args.args[0]
HOST=socket.gethostname()

m = hashlib.md5()
m.update( HOST + ":" + EVENT)

file = "/tmp/opsgenie-" + m.hexdigest()
if not os.path.isfile( file ):
    print("%s does not exist" % file)
    exit( 1 )

with open (file, "r") as myfile:
    IDENTIFIER=myfile.readlines()

print(IDENTIFIER)

body = opsgenie_sdk.CloseAlertPayload(
    note='Condition resolved')
try:
    response = opsgenie_sdk.AlertApi(client).close_alert(identifier=IDENTIFIER[0], identifier_type='id', close_alert_payload=body)


    print('request id: {}'.format(response.request_id))
    print('took: {}'.format(response.took))
    print('result: {}'.format(response.result))

    os.remove( file )
except opsgenie_sdk.ApiException as err:
    print("Exception when calling AlertApi->close_alert: %s\n" % err)
    exit( 1 )
